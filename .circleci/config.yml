version: 2.1

parameters:
  only_pacts:
    type: boolean
    default: false
  pact_consumer_tags:
    type: string
    default: main

orbs:
  hmpps: ministryofjustice/hmpps@3.0.4
  kubernetes: circleci/kubernetes@0.11.2
  mem: circleci/rememborb@0.0.1
  snyk: snyk/snyk@0.0.12

_snyk_options: &snyk_options
  snyk-scan: true
  snyk-fail-build: true
  snyk-args: --policy-path=.snyk --configuration-matching='^((?!test).)*$'

jobs:
  validate:
    executor: hmpps/java
    docker:
      - image: cimg/openjdk:11.0
        environment:
          POSTGRES_DB: circle_test
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - run:
          name: Setup for SQL validation
          command: |
            sudo apt update
            sudo apt install postgresql-client
      - run:
          name: Validate report SQLs
          command: |
            for sqlfile in helm_deploy/hmpps-interventions-service/reports/*.sql; do
              PGPASSWORD="$POSTGRES_PASSWORD" psql -U"postgres" "postgresql://localhost:5432/$POSTGRES_DB" < "$sqlfile"
            done

  publish_data:
    executor: hmpps/java
    docker:
      - image: cimg/openjdk:11.0
        environment:
          POSTGRES_DB: circle_test
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Migrate the database
          command: |
            wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/7.7.0/flyway-commandline-7.7.0-linux-x64.tar.gz | \
              tar xvz && sudo ln -s `pwd`/flyway-7.7.0/flyway /usr/local/bin
            flyway migrate -url="jdbc:postgresql://localhost:5432/$POSTGRES_DB" -user="postgres" -password="password" -locations="src/main/resources/db/migration"
      - run:
          name: Build data dictionary
          command: |
            sudo apt update && sudo apt install graphviz
            script/build-data-dictionary.sh
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
            docker build --pull --file=script/Dockerfile.data-dictionary script/ --tag="quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}:data-dictionary-${APP_VERSION}"
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Publish docker image
                command: |
                  docker login -u="${QUAYIO_USERNAME}" -p="${QUAYIO_PASSWORD}" quay.io
                  docker push "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}:data-dictionary-${APP_VERSION}"

  pact_check_and_publish:
    parameters:
      consumer_tags:
        type: string
    environment:
      PACTBROKER_HOST: "pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACTBROKER_AUTH_USERNAME: "interventions"
    executor: hmpps/java
    docker:
      - image: cimg/openjdk:11.0
        environment:
          POSTGRES_DB: circle_test
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: |
            PACT_PROVIDER_VERSION="$CIRCLE_SHA1" \
              PACT_PROVIDER_TAG="$CIRCLE_BRANCH" \
              PACTBROKER_CONSUMERVERSIONSELECTORS_TAGS="<< parameters.consumer_tags >>" \
              PACT_PUBLISH_RESULTS="true" \
              ./gradlew pactTestPublish
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  vulnerability_scan:
    executor: hmpps/java
    parameters:
      monitor:
        type: boolean
        default: false
      snyk-scan:
        type: boolean
      snyk-fail-build:
        type: boolean
      snyk-args:
        type: string
    steps:
      - checkout
      - snyk/scan:
          project: '${CIRCLE_PROJECT_REPONAME}'
          monitor-on-build: << parameters.monitor >>
          organization: "digital-probation-services"
          severity-threshold: "high" # note: this does not affect snyk 'monitor' commands
          fail-on-issues: << parameters.snyk-fail-build >>
          additional-arguments: << parameters.snyk-args >>

  reset_research_db:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - hmpps/k8s_setup
      - kubernetes/create-or-update-resource:
          # this cleans the database - do not change this namespace!!
          namespace: hmpps-interventions-research
          resource-file-path: user_research/reset_env.yaml

workflows:
  version: 2
  pact:
    jobs:
      - pact_check_and_publish:
          consumer_tags: << pipeline.parameters.pact_consumer_tags >>

  build_test_and_deploy:
    unless: << pipeline.parameters.only_pacts >>
    jobs:
      - validate
      - publish_data:
          requires:
            - build_docker
            - build_and_publish_docker
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_and_publish_docker
          <<: *snyk_options
          filters:
            branches:
              only:
                - main
      - vulnerability_scan:
          name: vulnerability_scan_and_monitor
          monitor: true
          <<: *snyk_options
          filters:
            branches:
              only:
                - main
      - vulnerability_scan:
          <<: *snyk_options
          filters:
            branches:
              ignore:
                - main
      - hmpps/build_docker:
          name: build_docker
          publish: false
          <<: *snyk_options
          filters:
            branches:
              ignore:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - publish_data
            - build_and_publish_docker
            - helm_lint
            - vulnerability_scan_and_monitor
          context:
            - hmpps-common-vars
      - approve_research:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_research
          env: "research"
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          requires:
            - approve_research
          context:
            - hmpps-common-vars
            - hmpps-interventions-service-research
      - approve_reset_research_db:
          type: approval
          filters:
            branches:
              only: [main]
      - reset_research_db:
          requires:
            - approve_reset_research_db
          context:
            - hmpps-interventions-service-research
      - hmpps/deploy_env:
          name: deploy_research_manually
          env: "research"
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          requires:
            - reset_research_db
          context:
            - hmpps-common-vars
            - hmpps-interventions-service-research
      - approve_preprod:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          slack_notification: true
          slack_channel_name: "interventions-dev-notifications"
          requires:
            - approve_preprod
          context:
            - hmpps-common-vars
            - hmpps-interventions-service-preprod

  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - vulnerability_scan:
          name: vulnerability_scan_and_monitor
          monitor: true
          <<: *snyk_options
      - hmpps/build_docker:
          publish: false
          <<: *snyk_options
