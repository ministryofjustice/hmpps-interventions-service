version: "3"
services:
  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    depends_on:
      - auth-db
    ports:
      - '8090:8090'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8090/auth/health']
    environment:
      - SERVER_PORT=8090
      - SPRING_PROFILES_ACTIVE=dev,delius,local-postgres
      - SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL=false
      - SPRING_H2_CONSOLE_SETTINGS_WEBALLOWOTHERS=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth-db

  hmpps-manage-users:
    image: quay.io/hmpps/hmpps-manage-users-api:latest
    networks:
      - hmpps
    container_name: hmpps-manage-users
    depends_on:
      - hmpps-auth
      - hmpps-external-users-api
    ports:
      - "8096:8096"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8096/health" ]
    environment:
      - SERVER_PORT=8096
      - HMPPS_AUTH_ENDPOINT_URL=http://hmpps-auth:8090/auth
      - API_BASE_URL_OAUTH=http://hmpps-auth:8090/auth
      - SPRING_PROFILES_ACTIVE=dev
      - EXTERNAL_USERS_ENDPOINT_URL=http://hmpps-external-users-api:8098

  hmpps-external-users-api:
    image: quay.io/hmpps/hmpps-external-users-api:latest
    networks:
      - hmpps
    container_name: hmpps-external-users-api
    depends_on:
      - auth-db
      - hmpps-auth
    ports:
      - "8098:8098"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8098/health/ping"]
    environment:
      - SERVER_PORT=8098
      - SPRING_PROFILES_ACTIVE=dev,local-postgres
      - SPRING_R2DBC_URL=r2dbc:postgresql://auth-db:5432/auth-db?sslmode=prefer
      - SPRING_FLYWAY_URL=jdbc:postgresql://auth-db:5432/auth-db?sslmode=prefer
      - API_BASE_URL_OAUTH=http://hmpps-auth:8090/auth

  assess-risks-and-needs:
    image: quay.io/hmpps/hmpps-assess-risks-and-needs:latest
    networks:
      - hmpps
    container_name: assess-risks-and-needs
    ports:
      - "8094:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    environment:
      - SERVER_PORT=8080
      - OAUTH_ENDPOINT_URL=http://hmpps-auth:8090/auth

  postgres:
    image: postgres:14.9-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - ./src/main/resources/db/local/init:/docker-entrypoint-initdb.d:ro

  auth-db:
    image: postgres:15
    networks:
      - hmpps
    container_name: auth-db
    restart: always
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_USER=admin
      - POSTGRES_DB=auth-db
    healthcheck:
      test: pg_isready -d auth-db

  wiremock:
    image: wiremock/wiremock:3.2.0
    networks:
      - hmpps
    restart: always
    ports:
      - "9092:8080"
    volumes:
      - ./wiremock_mappings:/home/wiremock/mappings
    command: '--verbose'

networks:
  hmpps:
