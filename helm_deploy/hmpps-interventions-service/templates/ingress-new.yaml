{{- $fullName := include "app.name" . -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}-new
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    external-dns.alpha.kubernetes.io/set-identifier: {{ $fullName }}-new-{{ .Release.Namespace }}-{{ .Values.ingress.migration.colour }}
    external-dns.alpha.kubernetes.io/aws-weight: "100"
    nginx.ingress.kubernetes.io/custom-http-errors: "418"
    {{- if .Values.env_details.contains_live_data }}
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRuleUpdateActionById 949110 "t:none,deny,status:423,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:423,logdata:%{SERVER_NAME}"
      SecAction "id:900110,phase:1,nolog,pass,t:none,setvar:tx.inbound_anomaly_score_threshold=50,setvar:tx.outbound_anomaly_score_threshold=50"
    {{- end }}
spec:
  {{- if .Values.env_details.contains_live_data }}
  ingressClassName: modsec
  {{- else }}
  ingressClassName: default
  {{- end }}
  tls:
  {{- range .Values.ingress.hosts }}
  - hosts:
    - {{ .host }}
    {{ if .cert_secret }}secretName: {{ .cert_secret }}{{ end }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ .host }}
      http:
        paths:
          - path: /prometheus
            backend:
              serviceName: default-http-backend
              servicePort: 80
          - path: /sent-referrals
            backend:
              serviceName: {{ $fullName }}-dashboard
              servicePort: http
          - path: /reports/service-provider/performance
            backend:
              serviceName: {{ $fullName }}-performance-report
              servicePort: http
          - path: /
            backend:
              serviceName: {{ $fullName }}-api
              servicePort: http
          - path: /meta/schema
            backend:
              serviceName: {{ $fullName }}-data-dictionary
              servicePort: http
  {{- end }}
