---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-extractor-reports
data:
{{ (.Files.Glob "reports/*.sql").AsConfig | indent 2 }}

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: data-extractor-reporting
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: "Never"
          volumes:
          - name: data-extractor-reports
            configMap:
              name: data-extractor-reports
              defaultMode: 0755
          containers:
          - name: data-extractor-reporting
            image: ministryofjustice/data-engineering-data-extractor:develop
            {{ if (and .Values.env_details.contains_live_data (not .data_protection_impact_assessment_signed_off)) }}
            args: ["sh", "-c", "psql -c 'SELECT 1' && mkdir -p 'export/csv' && touch 'export/csv/signed_off_DPIA_required.csv' && transfer_local_to_s3.sh"]
            {{ else }}
            args: ["sh", "-c", "report_path=$(generate_extract_path.py --database 'reports' --table 'crs_performance_report') && mkdir -p '$report_path' && psql --file=/reports/crs_performance_report.sql > '$report_path''/crs_performance_report.csv' && extract_psql_all_tables_to_csv.sh && transfer_local_to_s3.sh"]
            {{ end }}
            volumeMounts:
            - name: data-extractor-reports
              mountPath: /reports/crs_performance_report.sql
              readOnly: true
              subPath: crs_performance_report.sql
            env:
              - name: USE_STATIC_LOCATION
                value: "true"
              - name: PGHOST
                valueFrom:
                  secretKeyRef:
                    name: postgres
                    key: rds_instance_address
              - name: PGDATABASE
                valueFrom:
                  secretKeyRef:
                    name: postgres
                    key: database_name
              - name: PGUSER
                valueFrom:
                  secretKeyRef:
                    name: postgres
                    key: database_username
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgres
                    key: database_password
              - name: S3_DESTINATION
                valueFrom:
                  secretKeyRef:
                    name: reporting-s3-bucket
                    key: destination_bucket
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: reporting-s3-bucket
                    key: access_key_id
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: reporting-s3-bucket
                    key: secret_access_key
              - name: AWS_DEFAULT_REGION
                value: eu-west-2
